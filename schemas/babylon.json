{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"properties": {
		"autoClear": {
			"type": "boolean"
		},
		"clearColor": {
			"$ref": "#/definitions/color"
		},
		"ambientColor": {
			"$ref": "#/definitions/color"
		},
		"gravity": {
			"$ref": "#/definitions/vector3"
		},
		"cameras": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/camera-schema"
			}
		},
		"activeCamera": {
			"type": "string"
		},
		"lights": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/light-schema"
			}
		},
		"materials": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/material-schema"
			}
		},
		"geometries": {
			"$ref": "#/definitions/geometries-schema"
		},
		"meshes": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/mesh-schema"
			}
		},
		"multiMaterials": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/multiMaterial-schema"
			}
		},
		"shadowGenerators": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/shadowGenerators-schema"
			}
		},
		"skeletons": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/Skeleton-schema"
			}
		},
		"particleSystem": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/ParticleSystem-schema"
			}
		},
		"lensFlareSystems": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/LensFlareSystem-schema"
			}
		},
		"actions": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/Action-schema"
			}
		},
		"sounds": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/Sound-schema"
			}
		},
		"workerCollisions": {
			"type": "boolean"
		},
		"collisionsEnabled": {
			"type": "boolean"
		},
		"physicsEnabled": {
			"type": "boolean"
		},
		"physicsGravity": {
			"$ref": "#/definitions/vector3"
		},
		"physicsEngine": {
			"type": "string",
			"enum": [
				"oimo",
				"cannon"
			]
		},
		"animations": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/Animation-schema"
			}
		},
		"autoAnimate": {
			"type": "boolean"
		},
		"autoAnimateFrom": {
			"type": "integer"
		},
		"autoAnimateTo": {
			"type": "integer"
		},
		"autoAnimateLoop": {
			"type": "boolean"
		},
		"autoAnimateSpeed": {
			"type": "number"
		}
	},
	"definitions": {
		"vector2": {
			"type": "array",
			"items": {
				"type": "number"
			}
		},
		"vector3": {
			"type": "array",
			"items": {
				"type": "number"
			}
		},
		"vector4": {
			"type": "array",
			"items": {
				"type": "number"
			}
		},
		"color": {
			"type": "array",
			"items": {
				"type": "number"
			}
		},
		"color3": {
			"type": "array",
			"items": {
				"type": "number"
			}
		},
		"color4": {
			"type": "array",
			"items": {
				"type": "number"
			}
		},
		"camera-schema": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"tags": {
					"type": "string"
				},
				"parentId": {
					"type": "string"
				},
				"lockedTargetId": {
					"type": "string"
				},
				"position": {
					"$ref": "#/definitions/vector3"
				},
				"target": {
					"$ref": "#/definitions/vector3"
				},
				"alpha": {
					"type": "number",
					"description": "only for ArcRotateCamera and AnaglyphArcRotateCamera"
				},
				"beta": {
					"type": "number",
					"description": "only for ArcRotateCamera and AnaglyphArcRotateCamera"
				},
				"radius": {
					"type": "number",
					"description": "only for ArcRotateCamera, FollowCamera and AnaglyphArcRotateCamera"
				},
				"eye_space": {
					"type": "number",
					"description": "only for ArcRotateCamera, FollowCamera and AnaglyphArcRotateCamera"
				},
				"heightOffset": {
					"type": "number",
					"description": "only for FollowCamera"
				},
				"rotationOffset": {
					"type": "number",
					"description": "only for FollowCamera"
				},
				"cameraRigMode": {
					"type": "integer",
					"description": "(can be omitted)"
				},
				"fov": {
					"type": "number",
					"description": "(in radians)"
				},
				"minZ": {
					"type": "number"
				},
				"maxZ": {
					"type": "number"
				},
				"speed": {
					"type": "number"
				},
				"inertia": {
					"type": "number",
					"minimum": 0,
					"maximum": 1,
					"description": "(between 0 and 1)"
				},
				"checkCollisions": {
					"type": "boolean"
				},
				"applyGravity": {
					"type": "boolean"
				},
				"ellipsoid": {
					"$ref": "#/definitions/vector3"
				},
				"animations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Animation-schema"
					}
				},
				"autoAnimate": {
					"type": "boolean"
				},
				"autoAnimateFrom": {
					"type": "integer"
				},
				"autoAnimateTo": {
					"type": "integer"
				},
				"autoAnimateLoop": {
					"type": "boolean"
				},
				"autoAnimateSpeed": {
					"type": "number",
					"description": "number (can be omitted)"
				},
				"inputmgr": {
					"type": "object",
					"description": "map of camera inputs (can be omitted, see below)"
				}
			}
		},
		"light-schema": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"tags": {
					"type": "string"
				},
				"type": {
					"type": "integer",
					"enum": [
						0,
						1,
						2,
						3
					],
					"description": "(0 for point light, 1 for directional, 2 for spot and 3 for hemispheric)"
				},
				"position": {
					"$ref": "#/definitions/vector3"
				},
				"direction": {
					"$ref": "#/definitions/vector3"
				},
				"angle": {
					"type": "number",
					"description": "(for spot lights)"
				},
				"exponent": {
					"type": "number",
					"description": "(for spot lights)"
				},
				"groundColor": {
					"$ref": "#/definitions/color3",
					"description": "(for hemispheric lights)"
				},
				"intensity": {
					"type": "number"
				},
				"range": {
					"type": "number"
				},
				"diffuse": {
					"$ref": "#/definitions/color3"
				},
				"specular": {
					"$ref": "#/definitions/color3"
				},
				"excludedMeshesIds": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"includedOnlyMeshesIds": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"animations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Animation-schema"
					}
				},
				"autoAnimate": {
					"type": "boolean"
				},
				"autoAnimateFrom": {
					"type": "integer"
				},
				"autoAnimateTo": {
					"type": "integer"
				},
				"autoAnimateLoop": {
					"type": "boolean"
				},
				"autoAnimateSpeed": {
					"type": "number",
					"description": "number (can be omitted)"
				}
			}
		},
		"material-schema": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"tags": {
					"type": "string"
				},
				"disableDepthWrite": {
					"type": "boolean"
				},
				"ambient": {
					"$ref": "#/definitions/color3"
				},
				"diffuse": {
					"$ref": "#/definitions/color3"
				},
				"specular": {
					"$ref": "#/definitions/color3"
				},
				"specularPower": {
					"type": "number"
				},
				"emissive": {
					"$ref": "#/definitions/color3"
				},
				"alpha": {
					"type": "number"
				},
				"backFaceCulling": {
					"type": "boolean"
				},
				"wireframe": {
					"type": "boolean"
				},
				"diffuseTexture": {
					"$ref": "#/definitions/Texture-schema"
				},
				"ambientTexture": {
					"$ref": "#/definitions/Texture-schema"
				},
				"opacityTexture": {
					"$ref": "#/definitions/Texture-schema"
				},
				"reflectionTexture": {
					"$ref": "#/definitions/Texture-schema"
				},
				"refractionTexture": {
					"$ref": "#/definitions/Texture-schema"
				},
				"indexOfRefraction": {
					"type": "number"
				},
				"emissiveTexture": {
					"$ref": "#/definitions/Texture-schema"
				},
				"specularTexture": {
					"$ref": "#/definitions/Texture-schema"
				},
				"bumpTexture": {
					"$ref": "#/definitions/Texture-schema"
				},
				"lightmapTexture": {
					"$ref": "#/definitions/Texture-schema"
				},
				"useLightmapAsShadowmap": {
					"type": "boolean"
				},
				"checkReadyOnlyOnce": {
					"type": "boolean"
				},
				"useReflectionFresnelFromSpecular": {
					"type": "boolean"
				},
				"useEmissiveAsIllumination": {
					"type": "boolean"
				},
				"diffuseFresnelParameters": {
					"$ref": "#/definitions/Fresnel-schema"
				},
				"opacityFresnelParameters": {
					"$ref": "#/definitions/Fresnel-schema"
				},
				"reflectionFresnelParameters": {
					"$ref": "#/definitions/Fresnel-schema"
				},
				"refractionFresnelParameters": {
					"$ref": "#/definitions/Fresnel-schema"
				},
				"emissiveFresnelParameters": {
					"$ref": "#/definitions/Fresnel-schema"
				}
			}
		},
		"geometries-schema": {
			"type": "object",
			"properties": {
				"boxes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/box-schema"
					}
				},
				"spheres": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/sphere-schema"
					}
				},
				"cylinders": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/cylinder-schema"
					}
				},
				"toruses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/torus-schema"
					}
				},
				"grounds": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ground-schema"
					}
				},
				"planes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/plane-schema"
					}
				},
				"torusKnots": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/torusKnot-schema"
					}
				},
				"vertexData": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/vertexData-schema"
					}
				}
			}
		},
		"box-schema": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"size": {
					"type": "number"
				},
				"canBeRegenerated": {
					"type": "boolean"
				},
				"tags": {
					"type": "string"
				}
			}
		},
		"sphere-schema": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"segments": {
					"type": "number"
				},
				"diameter": {
					"type": "number"
				},
				"canBeRegenerated": {
					"type": "boolean"
				},
				"tags": {
					"type": "string"
				}
			}
		},
		"cylinder-schema": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"height": {
					"type": "number"
				},
				"diameterTop": {
					"type": "number"
				},
				"diameterBottom": {
					"type": "number"
				},
				"tessellation": {
					"type": "number"
				},
				"subdivisions": {
					"type": "integer"
				},
				"canBeRegenerated": {
					"type": "boolean"
				},
				"tags": {
					"type": "string"
				}
			}
		},
		"torus-schema": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"diameter": {
					"type": "number"
				},
				"thickness": {
					"type": "number"
				},
				"tessellation": {
					"type": "number"
				},
				"canBeRegenerated": {
					"type": "boolean"
				},
				"tags": {
					"type": "string"
				}
			}
		},
		"ground-schema": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"width": {
					"type": "number"
				},
				"height": {
					"type": "number"
				},
				"subdivisions": {
					"type": "number"
				},
				"canBeRegenerated": {
					"type": "boolean"
				},
				"tags": {
					"type": "string"
				}
			}
		},
		"plane-schema": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"size": {
					"type": "number"
				},
				"canBeRegenerated": {
					"type": "boolean"
				},
				"tags": {
					"type": "string"
				}
			}
		},
		"torusKnot-schema": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"radius": {
					"type": "number"
				},
				"tube": {
					"type": "number"
				},
				"radialSegments": {
					"type": "number"
				},
				"tubularSegments": {
					"type": "number"
				},
				"p": {
					"type": "number"
				},
				"q": {
					"type": "number"
				},
				"canBeRegenerated": {
					"type": "boolean"
				},
				"tags": {
					"type": "string"
				}
			}
		},
		"vertexData-schema": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"updatable": {
					"type": "boolean"
				},
				"positions": {
					"type": "array",
					"description": "array of floats (3 per vertex)",
					"items": {
						"type": "number"
					}
				},
				"normals": {
					"type": "array",
					"description": "array of floats (3 per vertex)",
					"items": {
						"type": "number"
					}
				},
				"uvs": {
					"type": "array",
					"description": "array of floats (2 per vertex)",
					"items": {
						"type": "number"
					}
				},
				"uv2s": {
					"type": "array",
					"description": "array of floats (2 per vertex) which is the 2nd texture coordinates (can be omitted)",
					"items": {
						"type": "number"
					}
				},
				"uv3s": {
					"type": "array",
					"description": "array of floats (2 per vertex) which is the 3nd texture coordinates (can be omitted)",
					"items": {
						"type": "number"
					}
				},
				"uv4s": {
					"type": "array",
					"description": "array of floats (2 per vertex) which is the 4nd texture coordinates (can be omitted)",
					"items": {
						"type": "number"
					}
				},
				"uv5s": {
					"type": "array",
					"description": "array of floats (2 per vertex) which is the 5nd texture coordinates (can be omitted)",
					"items": {
						"type": "number"
					}
				},
				"uv6s": {
					"type": "array",
					"description": "array of floats (2 per vertex) which is the 6nd texture coordinates (can be omitted)",
					"items": {
						"type": "number"
					}
				},
				"colors": {
					"type": "array",
					"items": {
						"type": "number"
					},
					"description": "array of floats (3 per vertex) which is the per vertex color (can be omitted)"
				},
				"matricesIndices": {
					"type": "array",
					"items": {
						"type": "integer"
					},
					"description": "array of ints (4 per vertex) which is the matrices indices for bones (can be omitted)"
				},
				"matricesWeights": {
					"type": "array",
					"items": {
						"type": "number"
					},
					"description": "array of floats (4 per vertex) which is the matrices weights for bones (can be omitted)"
				},
				"indices": {
					"type": "array",
					"description": "array of ints (3 per face)",
					"items": {
						"type": "integer"
					}
				},
				"canBeRegenerated": {
					"type": "boolean"
				},
				"tags": {
					"type": "string"
				}
			}
		},
		"instance-schema": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"tags": {
					"type": "string"
				},
				"position": {
					"$ref": "#/definitions/vector3"
				},
				"rotation": {
					"$ref": "#/definitions/vector3"
				},
				"rotationQuaternion": {
					"$ref": "#/definitions/vector4"
				},
				"scaling": {
					"$ref": "#/definitions/vector3"
				}
			}
		},
		"mesh-schema": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"tags": {
					"type": "string"
				},
				"parentId": {
					"type": "string"
				},
				"materialId": {
					"type": "string"
				},
				"geometryId": {
					"type": "string"
				},
				"position": {
					"$ref": "#/definitions/vector3"
				},
				"rotation": {
					"$ref": "#/definitions/vector3"
				},
				"rotationQuaternion": {
					"$ref": "#/definitions/vector4"
				},
				"scaling": {
					"$ref": "#/definitions/vector3"
				},
				"pivotMatrix": {
					"type": "array",
					"items": {
						"type": "number"
					}
				},
				"freezeWorldMatrix": {
					"type": "boolean"
				},
				"infiniteDistance": {
					"type": "boolean"
				},
				"showBoundingBox": {
					"type": "boolean"
				},
				"showSubMeshesBoundingBox": {
					"type": "boolean"
				},
				"isVisible": {
					"type": "boolean"
				},
				"isEnabled": {
					"type": "boolean"
				},
				"pickable": {
					"type": "boolean"
				},
				"applyFog": {
					"type": "boolean"
				},
				"alphaIndex": {
					"type": "integer"
				},
				"checkCollisions": {
					"type": "boolean"
				},
				"billboardMode": {
					"type": "integer",
					"description": "(0 = None, 1 = X, 2 = Y, 4 = Z, 7 = All)"
				},
				"receiveShadows": {
					"type": "boolean"
				},
				"physicsImpostor": {
					"type": "integer",
					"enum": [
						0,
						1,
						2
					],
					"description": "(0 = None, 1 = Box, 2 = Sphere)"
				},
				"physicsMass": {
					"type": "number"
				},
				"physicsFriction": {
					"type": "number"
				},
				"physicsRestitution": {
					"type": "number"
				},
				"positions": {
					"type": "array",
					"description": "array of floats (3 per vertex)",
					"items": {
						"type": "number"
					}
				},
				"normals": {
					"type": "array",
					"description": "array of floats (3 per vertex)",
					"items": {
						"type": "number"
					}
				},
				"uvs": {
					"type": "array",
					"description": "array of floats (2 per vertex)",
					"items": {
						"type": "number"
					}
				},
				"uv2s": {
					"type": "array",
					"description": "array of floats (2 per vertex) which is the 2nd texture coordinates (can be omitted)",
					"items": {
						"type": "number"
					}
				},
				"uv3s": {
					"type": "array",
					"description": "array of floats (2 per vertex) which is the 3nd texture coordinates (can be omitted)",
					"items": {
						"type": "number"
					}
				},
				"uv4s": {
					"type": "array",
					"description": "array of floats (2 per vertex) which is the 4nd texture coordinates (can be omitted)",
					"items": {
						"type": "number"
					}
				},
				"uv5s": {
					"type": "array",
					"description": "array of floats (2 per vertex) which is the 5nd texture coordinates (can be omitted)",
					"items": {
						"type": "number"
					}
				},
				"uv6s": {
					"type": "array",
					"description": "array of floats (2 per vertex) which is the 6nd texture coordinates (can be omitted)",
					"items": {
						"type": "number"
					}
				},
				"colors": {
					"type": "array",
					"items": {
						"type": "number"
					},
					"description": "array of floats (3 per vertex) which is the per vertex color (can be omitted)"
				},
				"matricesIndices": {
					"type": "array",
					"items": {
						"type": "integer"
					},
					"description": "array of ints (4 per vertex) which is the matrices indices for bones (can be omitted)"
				},
				"matricesWeights": {
					"type": "array",
					"items": {
						"type": "number"
					},
					"description": "array of floats (4 per vertex) which is the matrices weights for bones (can be omitted)"
				},
				"indices": {
					"type": "array",
					"description": "array of ints (3 per face)",
					"items": {
						"type": "integer"
					}
				},
				"hasVertexAlpha": {
					"type": "boolean",
					"description": "boolean to indicate if colors field contains useful alpha value (can be omitted)"
				},
				"subMeshes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/subMesh-schema"
					}
				},
				"animations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Animation-schema"
					}
				},
				"autoAnimate": {
					"type": "boolean"
				},
				"autoAnimateFrom": {
					"type": "integer"
				},
				"autoAnimateTo": {
					"type": "integer"
				},
				"autoAnimateLoop": {
					"type": "boolean"
				},
				"autoAnimateSpeed": {
					"type": "number"
				},
				"instances": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/instance-schema"
					}
				},
				"actions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Action-schema"
					}
				}
			}
		},
		"subMesh-schema": {
			"type": "object",
			"properties": {
				"materialIndex": {
					"type": "integer"
				},
				"verticesStart": {
					"type": "integer"
				},
				"verticesCount": {
					"type": "integer"
				},
				"indexStart": {
					"type": "integer"
				},
				"indexCount": {
					"type": "integer"
				}
			}
		},
		"multiMaterial-schema": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"tags": {
					"type": "string"
				},
				"materials": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"shadowGenerators-schema": {
			"type": "object",
			"properties": {
				"useBlurVarianceShadowMap": {
					"type": "boolean"
				},
				"useVarianceShadowMap": {
					"type": "boolean"
				},
				"usePoissonSampling": {
					"type": "boolean"
				},
				"mapSize": {
					"type": "integer",
					"minimum": 64,
					"maximum": 2048,
					"description": "int (between 64 and 2048, must be a power of 2)"
				},
				"bias": {
					"type": "number"
				},
				"forceBackFacesOnly": {
					"type": "number"
				},
				"lightId": {
					"type": "string"
				},
				"renderList": {
					"type": "array",
					"description": "array of string (which are IDs of meshes)",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"Skeleton-schema": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"bones": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Bone-schema"
					},
					"description": "array of Bones (see below)"
				},
				"needInitialSkinMatrix": {
					"type": "boolean"
				}
			}
		},
		"Bone-schema": {
			"type": "object",
			"properties": {
				"parentBoneIndex": {
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"matrix": {
					"type": "array",
					"items": {
						"type": "number"
					}
				},
				"animations": {
					"type": "array",
					"description": "array of Animations (must be of matrix type)",
					"items": {
						"$ref": "#/definitions/Animation-schema"
					}
				}
			}
		},
		"ParticleSystem-schema": {
			"type": "object",
			"properties": {
				"emitterId": {
					"type": "string"
				},
				"gravity": {
					"$ref": "#/definitions/vector3"
				},
				"direction1": {
					"$ref": "#/definitions/vector3"
				},
				"direction2": {
					"$ref": "#/definitions/vector3"
				},
				"minEmitBox": {
					"$ref": "#/definitions/vector3"
				},
				"maxEmitBox": {
					"$ref": "#/definitions/vector3"
				},
				"color1": {
					"$ref": "#/definitions/color3"
				},
				"color2": {
					"$ref": "#/definitions/color3"
				},
				"colorDead": {
					"$ref": "#/definitions/color3"
				},
				"deadAlpha": {
					"type": "number"
				},
				"emitRate": {
					"type": "number"
				},
				"updateSpeed": {
					"type": "number"
				},
				"targetStopFrame": {
					"type": "integer"
				},
				"minEmitPower": {
					"type": "integer"
				},
				"maxEmitPower": {
					"type": "number"
				},
				"minLifeTime": {
					"type": "number"
				},
				"maxLifeTime": {
					"type": "number"
				},
				"minSize": {
					"type": "number"
				},
				"maxSize": {
					"type": "number"
				},
				"minAngularSpeed": {
					"type": "number"
				},
				"maxAngularSpeed": {
					"type": "number"
				},
				"textureName": {
					"type": "string"
				},
				"blendMode": {
					"type": "integer"
				},
				"capacity": {
					"type": "integer"
				},
				"textureMask": {
					"$ref": "#/definitions/color4"
				},
				"linkToEmitter": {
					"type": "boolean"
				},
				"animations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Animation-schema"
					}
				},
				"autoAnimate": {
					"type": "boolean"
				},
				"autoAnimateFrom": {
					"type": "integer"
				},
				"autoAnimateTo": {
					"type": "integer"
				},
				"autoAnimateLoop": {
					"type": "boolean"
				},
				"autoAnimateSpeed": {
					"type": "number"
				}
			}
		},
		"LensFlareSystem-schema": {
			"type": "object",
			"properties": {
				"emitterId": {
					"type": "string"
				},
				"borderLimit": {
					"type": "integer"
				},
				"flares": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LensFlare-schema"
					},
					"description": "array of LensFlares (see below)"
				}
			}
		},
		"LensFlare-schema": {
			"type": "object",
			"properties": {
				"position": {
					"type": "number"
				},
				"size": {
					"type": "number"
				},
				"color": {
					"$ref": "#/definitions/color3"
				},
				"textureName": {
					"type": "string"
				}
			}
		},
		"Action-schema": {
			"type": "object",
			"properties": {
				"type": {
					"type": "number",
					"enum": [
						0, 1, 2
					],
					"description": "action's type. 0 = Trigger, 1 = Action, 2 = Flow Control"
				},
				"name": {
					"type": "string",
					"description": "name of the action, trigger or flow control"
				},
				"detached": {
					"type": "boolean",
					"description": "if the node is detached or not. Means it will not be computed if detached === true"
				},
				"properties": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "name of the property"
							}, 
							"value": {
								"type": "string",
								"description": "value of the property. For example: name = 'target' and value = 'Plane001'"
							},
							"targetType": {
								"type": "string",
								"description": "internal use for the BabylonJS Actions Builder, specifies where to find the properties for 'propertyPath'"
							}
						}		
					}
				},
				"children": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Action-schema"
					}
				},
				"combine": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Action-schema"
					},
					"description": "used as a combine action. i.e name = 'CombineAction'. Can be null)"
				}

			}
		},
		"Sound-schema": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string",
					"description": "name of the file to load"
				},
				"volume": {
					"type": "number",
					"default": 1
				},
				"autoplay": {
					"type": "boolean"
				},
				"loop": {
					"type": "boolean"
				},
				"soundTrackId": {
					"type": "integer"
				},
				"spatialSound": {
					"type": "boolean",
					"description": "(to enable 3D sound, can be omitted)"
				}, 
				"position": {
					"$ref": "#/definitions/vector3",
					"default": "[0, 0, 0]"
				},
				"refDistance": {
					"type": "number",
					"default": 1
				},
				"rolloffFactor": {
					"type": "number",
					"default": 1
				},
				"maxDistance": {
					"type": "number",
					"default": 100
				},
				"distanceModel": {
					"type": "string",
					"default": "linear",
					"enum": [
						"linear",
						"inverse",
						"exponential"
					]
				},
				"panningModel": {
					"type": "string",
					"default": "HRTF",
					"enum": [
						"HRTF",
						"equalpower"
					]
				},
				"isDirectional": {
					"type": "boolean",
					"description": "to enable directional cone"
				}, 
				"coneInnerAngle": {
					"type": "number",
					"description": "can be omitted but set it for directional sound"
				},
				"coneOuterAngle": {
					"type": "number",
					"description": "can be omitted but set it for directional sound"
				},
				"coneOuterGain": {
					"type": "number",
					"description": "can be omitted but set it for directional sound"
				},
				"connectedMeshId": {
					"type": "string",
					"description": "ID of the mesh to attach to"
				},
				"localDirectionToMesh": {
					"$ref": "#/definitions/vector3",
					"default": "[1, 0, 0]"
				}
			}	
		},
		"Animation-schema": {
			"type": "object",
			"properties": {
				"dataType": {
					"type": "integer",
					"enum": [
						0,
						1,
						2,
						3
					],
					"description": "(0 = float, 1 = vector3, 2 = quaternion, 3 = matrix)"
				},
				"framePerSecond": {
					"type": "integer"
				},
				"loopBehavior": {
					"type": "integer",
					"enum": [
						0,
						1,
						2
					],
					"description": "(0 = relative, 1 = cycle, 2 = constant)"
				},
				"name": {
					"type": "string"
				},
				"property": {
					"type": "string"
				},
				"keys": {
					"$ref": "#/definitions/AnimationKey-schema"
				},
				"autoAnimate": {
					"type": "boolean"
				},
				"autoAnimateFrom": {
					"type": "integer"
				},
				"autoAnimateTo": {
					"type": "integer"
				},
				"autoAnimateLoop": {
					"type": "boolean"
				}
			}
		},
		"AnimationKey-schema": {
			"type": "object",
			"properties": {
				"frame": {
					"type": "integer"
				},
				"values": {
					"type": "array",
					"description": "array of float (depending of animated value)",
					"items": {
						"type": "number"
					}
				}
			}
		},
		"Texture-schema": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string",
					"description": "filename"
				},
				"level": {
					"type": "number",
					"minimum": 0,
					"maximum": 1,
					"description": "(between 0 and 1)"
				},
				"hasAlpha": {
					"type": "boolean"
				},
				"getAlphaFromRGB": {
					"type": "boolean"
				},
				"coordinatesMode": {
					"type": "integer",
					"enum": [
						0,
						1,
						2,
						3,
						4,
						5
					],
					"description": "int (0 = explicit, 1 spherical, 2 = planar, 3 = cubic, 4 = projection, 5 = skybox)"
				},
				"uOffset": {
					"type": "number"
				},
				"vOffset": {
					"type": "number"
				},
				"uScale": {
					"type": "number"
				},
				"vScale": {
					"type": "number"
				},
				"uAng": {
					"type": "number"
				},
				"vAng": {
					"type": "number"
				},
				"wAng": {
					"type": "number"
				},
				"wrapU": {
					"type": "boolean"
				},
				"wrapV": {
					"type": "boolean"
				},
				"coordinatesIndex": {
					"type": "integer"
				},
				"animations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Animation-schema"
					}
				},
				"base64String": {
					"type": "string",
					"description": "Can be omitted"
				}
			}
		},
		"Fresnel-schema": {
			"type": "object",
			"properties": {
				"isEnabled": {
					"type": "boolean"
				},
				"leftColor": {
					"$ref": "#/definitions/color3"
				},
				"rightColor": {
					"$ref": "#/definitions/color3"
				},
				"bias": {
					"type": "number"
				},
				"power": {
					"type": "number"
				}
			}
		}
	}
}
